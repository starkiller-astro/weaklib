OPENMP_summit_gcc    = -fopenmp
OPENMP_summit_pgi    = -mp
OPENMP_summit_xl     = -qsmp=omp:noauto
OPENMP_corigpu_pgi   = -mp
OPENMP_poplar_cce    = -homp
OPENMP_spock_cce     = -homp
OPENMP_spock_gcc     = -fopenmp
OPENMP_OL_summit_pgi = $(OPENMP_summit_pgi)
OPENMP_OL_summit_xl  = $(OPENMP_summit_xl) -qoffload
OPENMP_OL_corigpu_pgi= -mp=gpu -gpu=cc70,cuda11.1,ptxinfo -Minfo=accel
OPENMP_OL_poplar_cce = -homp
OPENMP_OL_spock_cce  = -fopenmp
OPENMP_OL_spock_gcc  = -fopenmp
ifeq ($(USE_OMP),TRUE)
    OPENMP               = $(OPENMP_$(MACHINE))
else ifeq ($(USE_OMP_OL),TRUE)
    OPENMP               = $(OPENMP_OL_$(MACHINE))
endif

OPENACC_summitdev_xl =
OPENACC_summit_gcc   = -fopenacc
OPENACC_summit_pgi   = -acc -ta=tesla:cc70,cuda10.1,ptxinfo -Minfo=accel
OPENACC_summit_xl    =
OPENACC_corigpu_pgi  = -acc -gpu=cc70,cuda11.1,ptxinfo -Minfo=accel
OPENACC_poplar_cce   =
OPENACC_spock_cce    = -hacc -hacc_model=auto_async_kernel:fast_addr:deep_copy
OPENACC_spock_gcc    = -fopenacc
ifeq ($(USE_OACC),TRUE)
    OPENACC              = $(OPENACC_$(MACHINE))
endif

FORTRAN_sn1987b      = mpif90
FORTRAN_ranchu       = mpif90
FORTRAN_ranchuair    = mpif90
FORTRAN_vass         = mpif90
FORTRAN_sjdunham     = mpif90
FORTRAN_titan_gnu    = ftn -cpp
FORTRAN_titan_cray   = ftn
FORTRAN_titan_pgi    = ftn -Mpreprocess
FORTRAN_darter_gnu   = ftn
FORTRAN_darter_cray  = ftn
FORTRAN_beacon_intel = mpiifort
FORTRAN_paullaiu_gnu = mpif90
FORTRAN_summitdev_gcc= mpifort -cpp
FORTRAN_summitdev_pgi= mpifort -Mpreprocess
FORTRAN_summitdev_xl = mpifort -qpreprocess
FORTRAN_summit_gcc   = mpifort -cpp
FORTRAN_summit_pgi   = mpifort -Mpreprocess
FORTRAN_summit_xl    = mpifort -qpreprocess
FORTRAN_poplar_cce   = ftn
FORTRAN_spock_cce    = ftn
FORTRAN_spock_gcc    = ftn
FORTRAN_corigpu_pgi  = mpifort -Mpreprocess
FORTRAN              = $(FORTRAN_$(MACHINE))

SUFFIX_f90_sn1987b      =
SUFFIX_f90_ranchu       =
SUFFIX_f90_vass         =
SUFFIX_f90_sjdunham     =
SUFFIX_f90_titan_gnu    =
SUFFIX_f90_titan_cray   =
SUFFIX_f90_titan_pgi    =
SUFFIX_darter_gnu       =
SUFFIX_f90_darter_cray  =
SUFFIX_f90_beacon_intel =
SUFFIX_f90_paullaiu_gnu =
SUFFIX_f90_summitdev_gcc=
SUFFIX_f90_summitdev_pgi=
SUFFIX_f90_summitdev_xl = 
SUFFIX_f90_summit_gcc   =
SUFFIX_f90_summit_pgi   =
SUFFIX_f90_summit_xl    =
SUFFIX_f90              = $(SUFFIX_f90_$(MACHINE))

FLINKER_sn1987b      = mpif90
FLINKER_ranchu       = mpif90
FLINKER_ranchuair    = mpif90
FLINKER_vass         = mpif90
FLINKER_sjdunham     = mpif90
FLINKER_titan_gnu    = ftn
FLINKER_titan_cray   = ftn
FLINKER_titan_pgi    = ftn
FLINKER_darter_gnu   = ftn
FLINKER_darter_cray  = ftn
FLINKER_beacon_intel = mpiifort
FLINKER_paullaiu_gnu = mpif90
FLINKER_summitdev_gcc= mpifort -cpp
FLINKER_summitdev_pgi= mpifort -Mpreprocess
FLINKER_summitdev_xl = mpifort -qpreprocess
FLINKER_summit_gcc   = mpifort -cpp
FLINKER_summit_pgi   = mpifort -Mpreprocess
FLINKER_summit_xl    = mpifort -qpreprocess
FLINKER_poplar_cce   = ftn
FLINKER_spock_cce    = ftn
FLINKER_spock_gcc    = ftn
FLINKER_corigpu_pgi  = mpifort -Mpreprocess
FLINKER              = $(FLINKER_$(MACHINE))

FLAGS_DEBUG        = $(DEBUG) $(OPENMP) $(OPENACC)
DEBUG_sn1987b      = -g -framework Accelerate -fbacktrace -ffpe-trap=invalid,zero -ffpe-summary=invalid,zero -fbounds-check
DEBUG_ranchu       = -g -fbacktrace -fbounds-check
DEBUG_ranchuair    = -g -fbacktrace -fbounds-check
DEBUG_vass         = -g -framework Accelerate -fbacktrace -ffpe-trap=invalid,zero -ffpe-summary=invalid,zero -fbounds-check
DEBUG_sjdunham     = -g -framework Accelerate -fbacktrace -ffpe-trap=invalid,zero -ffpe-summary=invalid,zero -fbounds-check
DEBUG_titan_gnu    = -g -Og -ffpe-trap=invalid,zero -fcheck=bounds
DEBUG_titan_cray   = -G0 -hfp0 -K trap=fp
DEBUG_titan_pgi    = -g -O0 -traceback -Mbounds -Ktrap=fp -Mnoopenmp
DEBUG_darter_gnu   = -g -ffpe-trap=invalid,zero -fcheck=bounds
DEBUG_darter_cray  = -G0 -hfp0 -K trap=fp
DEBUG_beacon_intel = -g -warn all -fpe0 -fpe-all=0 -ftrapuv -traceback -CB
DEBUG_paullaiu_gnu = -g -fbacktrace -ffpe-trap=invalid,zero -ffpe-summary=invalid,zero -fbounds-check
DEBUG_summitdev_gcc= -g -Og -ggdb -ftrapv -fcheck=bounds,do,mem,pointer -ffpe-trap=invalid,zero,overflow -fbacktrace
DEBUG_summitdev_pgi= -O0 -Mbounds -Mnoopenmp
DEBUG_summitdev_xl = -g -O0 -qstrict=all -qsuppress=cmpmsg -qflag=i:w -qfloat=rngchk -qcheck=all:nounset -qflttrap=enable:invalid:nanq:overflow:zerodivide -qsigtrap=xl__trcedump
DEBUG_summit_gcc   = -g -Og -ggdb -ftrapv -fcheck=bounds,do,mem,pointer -ffpe-trap=invalid,zero,overflow -fbacktrace
DEBUG_summit_pgi   = -O0 -Mbounds -Mnoopenmp
DEBUG_summit_xl    = -g -O0 -qstrict=all -qsuppress=cmpmsg -qflag=i:w -qfloat=rngchk -qcheck=all:nounset -qflttrap=enable:invalid:nanq:overflow:zerodivide -qsigtrap=xl__trcedump
DEBUG_poplar_cce   = -G0 -eD -hfp0 -K trap=fp -h heap_allocate
DEBUG_spock_cce    = -g -G0 -O0
DEBUG_spock_gcc    = -g -Og -ggdb -ftrapv -fcheck=bounds,do,mem,pointer -ffpe-trap=invalid,zero,overflow -fbacktrace -fallow-argument-mismatch
DEBUG_corigpu_pgi  = -g -O0 -traceback -Mbounds -Ktrap=fp
DEBUG              = $(DEBUG_$(MACHINE))

FLAGS_OPTIMIZE        = $(OPTIMIZE) $(OPENMP) $(OPENACC)
OPTIMIZE_sn1987b      = -O2 -framework Accelerate
OPTIMIZE_ranchu       = -O2
OPTIMIZE_ranchuair    = -O2
OPTIMIZE_vass         = -O2 -framework Accelerate
OPTIMIZE_sjdunham     = -O2
OPTIMIZE_titan_gnu    = -O3 -march=bdver1
OPTIMIZE_titan_cray   =
OPTIMIZE_titan_pgi    = -fastsse
OPTIMIZE_darter_gnu   = -O2
OPTIMIZE_darter_cray  = -O2
OPTIMIZE_beacon_intel = -fast
OPTIMIZE_paullaiu_gnu  = -O2
OPTIMIZE_summitdev_gcc= -g -O3 -mcpu=power8
OPTIMIZE_summitdev_pgi= -g -O3 -tp=pwr8
OPTIMIZE_summitdev_xl = -g -O3 -qnohot -qarch=pwr8 -qtune=pwr8 -qsclk=micro -qsuppress=cmpmsg -w
OPTIMIZE_summit_gcc   = -g -O3 -mcpu=power9
OPTIMIZE_summit_pgi   = -g -O3
OPTIMIZE_summit_xl    = -g -O3 -qnohot -qarch=pwr9 -qtune=pwr9 -qsclk=micro -qsuppress=cmpmsg -w
OPTIMIZE_poplar_cce   = -h heap_allocate
OPTIMIZE_spock_cce    = -O2
OPTIMIZE_spock_gcc    = -g -O2 -fallow-argument-mismatch
OPTIMIZE_corigpu_pgi  = -g -O2 -tp=skylake
OPTIMIZE              = $(OPTIMIZE_$(MACHINE))

INCLUDE_HDF5_sn1987b      = -I/usr/local/Cellar/hdf5/1.10.5/include
INCLUDE_HDF5_ranchu       = -I/usr/local/hdf5/include
INCLUDE_HDF5_ranchuair    = -I/usr/local/Cellar/hdf5/1.12.0/include
INCLUDE_HDF5_vass         = -I/usr/local/Cellar/hdf5/1.10.5_1/include
INCLUDE_HDF5_sjdunham     =
INCLUDE_HDF5_titan_gnu    = # Use Module Load
INCLUDE_HDF5_titan_cray   = # Use Module Load
INCLUDE_HDF5_titan_gnu    = # Use Module Load
INCLUDE_HDF5_darter_gnu   = # Use Module Load
INCLUDE_HDF5_darter_cray  = # Use Module Load
INCLUDE_HDF5_beacon_intel = ${HDF5_INC}
INCLUDE_HDF5_paullaiu_gnu = -I/usr/lib/x86_64-linux-gnu/hdf5/serial/include
INCLUDE_HDF5_summitdev_gcc= -I$(OLCF_HDF5_ROOT)/include
INCLUDE_HDF5_summitdev_pgi= -I$(OLCF_HDF5_ROOT)/include
INCLUDE_HDF5_summitdev_xl = -I$(OLCF_HDF5_ROOT)/include
INCLUDE_HDF5_summit_gcc   = -I$(OLCF_HDF5_ROOT)/include
INCLUDE_HDF5_summit_pgi   = -I$(OLCF_HDF5_ROOT)/include
INCLUDE_HDF5_summit_xl    = -I$(OLCF_HDF5_ROOT)/include
INCLUDE_HDF5_poplar_cce   = -I/home/users/coe0194/sw/poplar/cce/11.0.0/hdf5-1.12.0/include
INCLUDE_HDF5_spock_cce    =
INCLUDE_HDF5_spock_gcc    =
INCLUDE_HDF5_corigpu_pgi  = -I$(HDF5_DIR)/include
INCLUDE_HDF5              = $(INCLUDE_HDF5_$(MACHINE))

INCLUDE_CUDA_titan_gnu    = -I$(CUDATOOLKIT_HOME)/include
INCLUDE_CUDA_titan_pgi    = -I$(CUDATOOLKIT_HOME)/include
INCLUDE_CUDA_summitdev_gcc= -I$(OLCF_CUDA_ROOT)/include
INCLUDE_CUDA_summitdev_pgi= -I$(OLCF_CUDA_ROOT)/include
INCLUDE_CUDA_summitdev_xl = -I$(OLCF_CUDA_ROOT)/include
INCLUDE_CUDA_summit_gcc   = -I$(OLCF_CUDA_ROOT)/include
INCLUDE_CUDA_summit_pgi   = -I$(OLCF_CUDA_ROOT)/include
INCLUDE_CUDA_summit_xl    = -I$(OLCF_CUDA_ROOT)/include
INCLUDE_CUDA_poplar_cce   = -I$(CUDA_ROOT)/include
INCLUDE_CUDA_corigpu_pgi  = -I$(CUDA_ROOT)/include
INCLUDE_CUDA              = $(INCLUDE_CUDA_$(MACHINE))

INCLUDE_ROCM_spock_cce    = -I$(ROCM_PATH)/include# -I$(OLCF_HIPFORT_ROOT)/include/amdgcn
INCLUDE_ROCM_spock_gcc    = -I$(ROCM_PATH)/include# -I$(OLCF_HIPFORT_ROOT)/include/amdgcn
INCLUDE_ROCM              = $(INCLUDE_ROCM_$(MACHINE))

INCLUDE                   = $(INCLUDE_HDF5)

LIBRARIES_HDF5_sn1987b      = -L/usr/local/Cellar/hdf5/1.10.5/lib -lhdf5_fortran -lhdf5
LIBRARIES_HDF5_ranchu       = -L/usr/local/hdf5/lib -lhdf5_fortran -lhdf5
LIBRARIES_HDF5_ranchuair    = -L/usr/local/Cellar/hdf5/1.12.0/lib -lhdf5_fortran -lhdf5
LIBRARIES_HDF5_vass         = -L/usr/local/Cellar/hdf5/1.10.5_1/lib -lhdf5_fortran -lhdf5
LIBRARIES_HDF5_sjdunham     =
LIBRARIES_HDF5_titan_gnu    = # Use Module Load
LIBRARIES_HDF5_titan_cray   = # Use Module Load
LIBRARIES_HDF5_titan_gnu    = # Use Module Load
LIBRARIES_HDF5_darter_gnu   = # Use Module Load
LIBRARIES_HDF5_darter_cray  = # Use Module Load
LIBRARIES_HDF5_beacon_intel = ${HDF5_LIB} -lhdf5_fortran -lhdf5
LIBRARIES_HDF5_paullaiu_gnu = -L/usr/lib/x86_64-linux-gnu/hdf5/serial/lib -lhdf5_fortran -lhdf5
LIBRARIES_HDF5_summitdev_gcc= -L$(OLCF_HDF5_ROOT)/lib -lhdf5_fortran -lhdf5
LIBRARIES_HDF5_summitdev_pgi= -L$(OLCF_HDF5_ROOT)/lib -lhdf5_fortran -lhdf5
LIBRARIES_HDF5_summitdev_xl = -L$(OLCF_HDF5_ROOT)/lib -lhdf5_fortran -lhdf5
LIBRARIES_HDF5_summit_gcc   = -L$(OLCF_HDF5_ROOT)/lib -lhdf5_fortran -lhdf5
LIBRARIES_HDF5_summit_pgi   = -L$(OLCF_HDF5_ROOT)/lib -lhdf5_fortran -lhdf5
LIBRARIES_HDF5_summit_xl    = -L$(OLCF_HDF5_ROOT)/lib -lhdf5_fortran -lhdf5
LIBRARIES_HDF5_poplar_cce   = -L/home/users/coe0194/sw/poplar/cce/11.0.0/hdf5-1.12.0/lib -lhdf5_fortran -lhdf5
LIBRARIES_HDF5_spock_cce    = -lhdf5_fortran -lhdf5
LIBRARIES_HDF5_spock_gcc    = -lhdf5_fortran -lhdf5
LIBRARIES_HDF5_corigpu_pgi  = -L$(HDF5_DIR)/lib -lhdf5_fortran -lhdf5
LIBRARIES_HDF5              = $(LIBRARIES_HDF5_$(MACHINE))

LIBRARIES_CUDA_titan_gnu    = -L$(CUDATOOLKIT_HOME)/lib64 -lcublas -lcudart -lcuda
LIBRARIES_CUDA_titan_pgi    = -L$(CUDATOOLKIT_HOME)/lib64 -lcublas -lcudart -lcuda
LIBRARIES_CUDA_summitdev_gcc= -L$(OLCF_CUDA_ROOT)/lib64 -lcublas -lcudart -lcuda
LIBRARIES_CUDA_summitdev_pgi= -L$(OLCF_CUDA_ROOT)/lib64 -lcublas -lcudart -lcuda
LIBRARIES_CUDA_summitdev_xl = -L$(OLCF_CUDA_ROOT)/lib64 -lcublas -lcudart -lcuda
LIBRARIES_CUDA_summit_gcc   = -L$(OLCF_CUDA_ROOT)/lib64 -lcublas -lcudart -lcuda
LIBRARIES_CUDA_summit_pgi   = -L$(OLCF_CUDA_ROOT)/lib64 -lcublas -lcudart -lcuda
LIBRARIES_CUDA_summit_xl    = -L$(OLCF_CUDA_ROOT)/lib64 -lcublas -lcudart -lcuda
LIBRARIES_CUDA_corigpu_pgi  = -cudalib
LIBRARIES_CUDA_poplar_cce   = -L$(CUDA_ROOT)/lib64 -lcusparse -lcusolver -lcublas -lcudart -L$(CUDA_ROOT)/compat -lcuda
LIBRARIES_CUDA              = $(LIBRARIES_CUDA_$(MACHINE))

LIBRARIES_ROCM_spock_cce    = -L$(ROCM_PATH)/lib -lrocsparse -lrocsolver -lrocblas -lhipblas -lhipsparse -lamdhip64# -L$(OLCF_HIPFORT_ROOT)/lib -lhipfort-amdgcn
LIBRARIES_ROCM_spock_gcc    = -L$(ROCM_PATH)/lib -lrocsparse -lrocsolver -lrocblas -lhipblas -lhipsparse -lamdhip64# -L$(OLCF_HIPFORT_ROOT)/lib -lhipfort-amdgcn
LIBRARIES_ROCM              = $(LIBRARIES_ROCM_$(MACHINE))

LIBRARIES                   = $(LIBRARIES_HDF5)

PP_sn1987b           = -D
PP_ranchu            = -D
PP_vass              = -D
PP_ranchuair         = -D
PP_sjdunham          = -D
PP_titan_gnu         = -D
PP_titan_cray        = -D
PP_titan_pgi         = -D
PP_darter_gnu        = -D
PP_darter_cray       = -D
PP_beacon_intel      = -D
PP_paullaiu_gnu      = -D
PP_summitdev_gcc     = -D
PP_summitdev_pgi     = -D
PP_summitdev_xl      = -D
PP_summit_gcc        = -D
PP_summit_pgi        = -D
PP_summit_xl         = -D
PP_poplar_cce        = -D
PP_spock_cce         = -D
PP_spock_gcc         = -D
PP_corigpu_pgi       = -D
PP                   = $(PP_$(MACHINE))

MDEFS_sn1987b        =
MDEFS_ranchu         =
MDEFS_vass           =
MDEFS_ranchuair      =
MDEFS_sjdunham       =
MDEFS_titan_gnu      =
MDEFS_titan_cray     =
MDEFS_titan_pgi      =
MDEFS_darter_gnu     =
MDEFS_darter_cray    =
MDEFS_beacon_intel   =
MDEFS_paullaiu_gnu   =
MDEFS_summitdev_gcc  =
MDEFS_summitdev_pgi  =
MDEFS_summitdev_xl   = -WF,
MDEFS_summit_gcc     =
MDEFS_summit_pgi     =
MDEFS_summit_xl      = -WF,
MDEFS                = $(MDEFS_$(MACHINE))

ifeq ($(USE_GPU),TRUE)
    ifeq ($(USE_CUDA),TRUE)
        INCLUDE   += $(INCLUDE_CUDA)
        LIBRARIES += $(LIBRARIES_CUDA)
    else ifeq ($(USE_HIP),TRUE)
        INCLUDE   += $(INCLUDE_ROCM)
        LIBRARIES += $(LIBRARIES_ROCM)
    endif
endif
